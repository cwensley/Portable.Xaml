name: Build

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  release:
    types: [ published ]

env:
  BuildVersion: "CI.${{ github.run_id }}"
  BuildBranch: "${{ github.ref }}"
  BuildParameters: "/v:Minimal /p:Configuration=Release Portable.Xaml.sln"

jobs:
  build:

    runs-on: windows-latest

    env:
      PlatformBuildParameters: ""

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.403

    - name: Get strong name key
      id: get_strong_name
      uses: timheuer/base64-to-file@v1
      if: github.event_name == 'release' || github.event_name == 'push'
      with:
        fileName: 'Portable.Xaml.snk'
        encodedString: ${{ secrets.STRONG_NAME_KEY }}
    
    - name: Clear package cache as a temporary workaround for actions/setup-dotnet#155
      run: dotnet clean && dotnet nuget locals all --clear

    - name: Build
      run: dotnet build ${{ env.PlatformBuildParameters }} ${{ env.BuildParameters }} "/p:AssemblyOriginatorKeyFile=${{ steps.get_strong_name.outputs.filePath }}"

    - name: Pack
      run: dotnet pack --no-build ${{ env.PlatformBuildParameters }} ${{ env.BuildParameters }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nuget
        path: artifacts/nuget/**/*.*nupkg

    - name: Test
      run: dotnet test --no-build ${{ env.PlatformBuildParameters }} ${{ env.BuildParameters }}

  publish:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1

      - name: Download NuGet Packages
        uses: actions/download-artifact@v1
        with:
          name: nuget

      - name: Push packages
        run: dotnet nuget push './nuget/**/*.nupkg' --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
